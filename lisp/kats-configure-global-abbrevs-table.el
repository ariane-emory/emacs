;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Define the global-abbrev-table:
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(define-abbrev-table 'global-abbrev-table
  '( ("-aa" "𝑎" nil :count 1)
     ("-00" "Ø" nil :count 1)
     ("-aaa" "𝛼" nil :count 1)
     ("-bb" "𝑏" nil :count 1)
     ("-bbb" "β" nil :count 1)
     ("-bc" "∵" nil :count 1)
     ("-bcus" "∵" nil :count 1)
     ("-cc" "𝑐" nil :count 1)
     ("-cj" "∧" nil :count 1)
     ("-conj" "∧" nil :count 1)
     ("-dd" "𝑑" nil :count 1)
     ("-ddd" "Δ" nil :count 1)
     ("-dfn" "≔" nil :count 1)
     ("-disj" "∨" nil :count 1)
     ("-divis" "÷" nil :count 1)
     ("-dj" "∨" nil :count 1)
     ("-ee" "𝑒" nil :count 1)
     ("-eee" "ε" nil :count 1)
     ("-elem" "∈" nil :count 1)
     ("-ent" "⊨" nil :count 1)
     ("-eset" "Ø" nil :count 1)
     ("-fa" "∀" nil :count 1)
     ("-ff" "𝑓" nil :count 1)
     ("-ffff" "⊥" nil :count 1)
     ("-ggg" "γ" nil :count 1)
     ("-gte" "≥" nil :count 1)
     ("-inters" "∩" nil :count 1)
     ("-ll" "λ" nil :count 1)
     ("-lm" "∈" nil :count 1)
     ("-lmda" "λ" nil :count 1)
     ;;("-lambda" "λ" nil :count 1)
     ("-lte" "≤" nil :count 1)
     ("-meq" "⟷" nil :count 1)
     ("-iff" "⟷" nil :count 1)
     ("-meqq" "⇔" nil :count 1)
     ("-meqqq" "≡" nil :count 1)
     ("-mm" "𝑚" nil :count 1)
     ("-multip" "×" nil :count 1)
     ("-ne" "≠" nil :count 1)
     ("-nec" "□ " nil :count 1)
     ("-neg" "¬" nil :count 1)
     ("-nelem" "∉" nil :count 1)
     ("-neq" "≠" nil :count 1)
     ("-nfa" "∄" nil :count 1)
     ("-nlm" "∉" nil :count 1)
     ("-nn" "𝑛" nil :count 1)
     ("-nnn" "ℕ" nil :count 1)
     ("-nsubst" "⊄" nil :count 1)
     ("-nsupst" "⊅" nil :count 1)
     ("-nxq" "∄" nil :count 1)
     ("-oo" "𝑜" nil :count 1)
     ("-pos" "◇ " nil :count 1)
     ("-pp" "𝑝" nil :count 1)
     ("-ppp" "𝑃 " nil :count 1)
     ("-psubst" "⊂" nil :count 1)
     ("-psupst" "⊃" nil :count 1)
     ("-qq" "𝑞" nil :count 1)
     ("-qqq" "𝑄" nil :count 1)
     ("-qqqq" "ℚ" nil :count 1)
     ("-rd" "·" nil :count 1)
     ("-ro" "→" nil :count 1)
     ("-rr" "𝑟" nil :count 1)
     ("-rro" "⇒" nil :count 1)
     ("-rrrr" "ℝ" nil :count 1)
     ("-ss" "𝑠" nil :count 1)
     ("-st" "∋" nil :count 1)
     ("-subst" "⊆ " nil :count 1)
     ("-supst" "⊇" nil :count 1)
     ("-symdiff" "∆ " nil :count 1)
     ("-te" "∃" nil :count 1)
     ("-tf" "∴" nil :count 1)
     ("-ts" "⊢" nil :count 1)
     ("-tt" "𝑡" nil :count 1)
     ("-tttt" "⊤" nil :count 1)
     ("-uni" "∪" nil :count 1)
     ("-uq" "∀" nil :count 1)
     ("-uu" "𝑢" nil :count 1)
     ("-vv" "𝑣" nil :count 1)
     ("-ww" "𝑤" nil :count 1)
     ("-xdj" "⊻" nil :count 1)
     ("-xq" "∃" nil :count 1)
     ("-xx" "𝑥" nil :count 1)
     ("-yy" "𝑦" nil :count 1)
     ("-zz" "𝑧" nil :count 1)
     ("-zzzz" "ℤ" nil :count 1)))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(provide 'kats-configure-global-abbrevs-table)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
